CREATE TABLE `WEBAUTHN_USERS` (
        `NETID` VARCHAR(32) NOT NULL,
        `USER_HANDLE` VARCHAR(128) NOT NULL,
        `LAST_AUTHN_TIME` DATETIME,
         CONSTRAINT `WEBAUTHN_USERS_PK` PRIMARY KEY (`USER_HANDLE`));

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE UNIQUE INDEX `WEBAUTHN_USERS_NETID_IDX` ON `WEBAUTHN_USERS` (`NETID`);

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE `WEBAUTHN_REGISTRATIONS` (
        `USER_HANDLE` VARCHAR(128) NOT NULL,
        `CREDENTIAL_TYPE` VARCHAR(20) NOT NULL,
        `CREDENTIAL_ID` VARCHAR(256) NOT NULL,
        `PUBLIC_KEY_COSE` VARCHAR(1024) NOT NULL,
        `SIGNATURE_COUNT` DOUBLE NOT NULL,
        `ATTESTATION_TYPE` VARCHAR(32) NOT NULL,
        `ATTESTATION_DATA` VARCHAR(4000),
        `REGISTRATION_TIME` DATETIME NOT NULL,
        `NICKNAME` VARCHAR(64) NOT NULL,
        `REGISTRATION_RESPONSE` LONGTEXT NOT NULL,
        `LAST_AUTHN_TIME` DATETIME,
         CONSTRAINT `FK_WEBAUTHN_USERS` FOREIGN KEY (`USER_HANDLE`)
          REFERENCES `WEBAUTHN_USERS` (`USER_HANDLE`));

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE INDEX `WEBAUTHN_REG_CRED_ID_IDX` ON `WEBAUTHN_REGISTRATIONS` (`CREDENTIAL_ID`);

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE UNIQUE INDEX `WEBAUTHN_REG_UNIQ_IDX` ON `WEBAUTHN_REGISTRATIONS` (`USER_HANDLE`, `CREDENTIAL_ID`);

CREATE OR REPLACE TRIGGER `TRG_WEBAUTHN_LAST_AUTHN`
BEFORE UPDATE OF signature_count ON webauthn_registrations
FOR EACH ROW
BEGIN
    UPDATE webauthn_users SET last_authn_time = systimestamp WHERE user_handle = :new.user_handle;
    :new.last_authn_time := systimestamp;
END;
/
ALTER TRIGGER `TRG_WEBAUTHN_LAST_AUTHN` ENABLE;
